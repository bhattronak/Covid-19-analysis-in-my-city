Dates=np.array(['20-03-2020','21-03-2020','22-03-2020','23-03-2020','24-03-2020','25-03-2020','26-03-2020','27-03-2020','28-03-2020','29-03-2020','30-03-2020','31-03-2020',
'01-04-2020',
'02-04-2020',
'03-04-2020',
'04-04-2020',
'05-04-2020',
'06-04-2020',
'07-04-2020',
'08-04-2020',
'09-04-2020',
'10-04-2020',
'11-04-2020',
'12-04-2020',
'13-04-2020',
'14-04-2020',
'15-04-2020',
'16-04-2020',
'17-04-2020',
'18-04-2020',
'19-04-2020',
'20-04-2020',
'21-04-2020',
'22-04-2020',
'23-04-2020',
'24-04-2020',
'25-04-2020',
'26-04-2020',
'27-04-2020',
'28-04-2020',
'29-04-2020',
'30-04-2020',
'01-05-2020',
'02-05-2020',
'03-05-2020',
'04-05-2020',
'05-05-2020',
'06-05-2020',
'07-05-2020',
'08-05-2020',
'09-05-2020',
'10-05-2020'])

#create dictionary to link this dates easily

DDates={'20-03-2020':0,'21-03-2020':1,'22-03-2020':2,'23-03-2020':3,'24-03-2020':4,'25-03-2020':5,'26-03-2020':6,'27-03-2020':7,'28-03-2020':8,'29-03-2020':9,'30-03-2020':10,'31-03-2020':11,
'01-04-2020':12,
'02-04-2020':13,
'03-04-2020':14,
'04-04-2020':15,
'05-04-2020':16,
'06-04-2020':17,
'07-04-2020':18,
'08-04-2020':19,
'09-04-2020':20,
'10-04-2020':21,
'11-04-2020':22,
'12-04-2020':23,
'13-04-2020':24,
'14-04-2020':25,
'15-04-2020':26,
'16-04-2020':27,
'17-04-2020':28,
'18-04-2020':29,
'19-04-2020':30,
'20-04-2020':31,
'21-04-2020':32,
'22-04-2020':33,
'23-04-2020':34,
'24-04-2020':35,
'25-04-2020':36,
'26-04-2020':37,
'27-04-2020':38,
'28-04-2020':39,
'29-04-2020':40,
'30-04-2020':41,
'01-05-2020':42,
'02-05-2020':43,
'04-05-2020':44,
'05-05-2020':45,
'06-05-2020':46,
'07-05-2020':47,
'08-05-2020':48}
TotalCases=np.array([3,3,6,6,8,8,8,9,9,9,9,9,9,9,9,9,10,12,12,13,22,47,77,108,113,117,133,140,154,166,193,202,207,217,219,223,234,241,248,263,265,305,324,350,386,421,441,457,476,500,528,540])
RecoveredCases=np.array([0,0,0,0,0,0,0,0,0,0,0,1,1,1,2,4,5,5,6,6,6,7,7,7,7,7,7,7,7,7,8,8,8,8,53,53,59,59,60,90,99,112,113,142,146,147,158,164,193,198,250,291])
DeathCases= np.array([0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,2,2,2,3,3,5,5,6,6,7,7,7,9,10,10,11,11,12,13,15,19,21,24,24,26,30,31,31,31,31,31,31])
plt.plot(TotalCases,c='Blue',ls='--',marker='P',ms='7',data='cases',label='Total Cases')
plt.plot(RecoveredCases,c='Green',ls='--',marker='o',ms='7',data='cases',label='Recovered Cases')
plt.plot(DeathCases,c='red',ls='--',marker='d',ms='7',data='cases',label='Death Cases')
plt.xticks(list(range(0,52)),Dates,rotation='45',label='Date')
plt.xlabel('Date')
plt.ylabel('Number of cases')
plt.title('Covid-19 Vadodara Graph')
plt.legend(loc='upper left',bbox_to_anchor=[1,1])
plt.show()
A=RecoveredCases/TotalCases
A
plt.plot(A,c='Blue',ls='--',marker='P',ms='7',data='cases',label='Total Cases')
plt.xticks(list(range(0,52)),Dates,rotation='45',label='Date')
plt.ylabel('Recovered Cases  /  Total Cases',size=20)
plt.xlabel('Date',size=20)
plt.title('RECOVERED CASES JOURNEY OF VADODARA',size=22)
plt.show()
plt.plot(ActiveCases/TotalCases,c='Blue',ls='--',marker='P',ms='7',data='cases',label='Total Cases')
plt.xticks(list(range(0,52)),Dates,rotation='45',label='Date')
plt.ylabel('Active Cases  /  Total Cases',size=20)
plt.xlabel('Date',size=20)
plt.title('Active CASES JOURNEY OF VADODARA',size=22)
plt.show()
